//
// File automatically generated by GenESyS CppForG plugin
// Date: 
//
#include <iostream>
#include <string>
//@TODO: Adjust depending on the running path
#include "../../../../kernel/simulator/Entity.h"
#include "../../../../kernel/simulator/Model.h"
// user includes


void _onDispatchEvent_CppForG_1(Simulator* simulator, Model* model, Entity* entity) {
	// user code

}

void _initBetweenReplications_CppForG_1(Model* model) {
	// user code

}

extern "C" void onDispatchEvent(Simulator* simulator, Model* model, Entity* entity) {
	try {
		_onDispatchEvent_CppForG_1(simulator, model, entity);
	} catch (const std::exception& e) {
		model->getTracer()->traceError(e, "Error while executing onDispatchEvent cpp user code in CppForG_1.");
	}
}

extern "C" void initBetweenReplications(Model* model) {
	try {
		_initBetweenReplications_CppForG_1(model);
	} catch (const std::exception& e) {
		model->getTracer()->traceError(e, "Error while executing initBetweenReplications cpp user code in CppForG_1.");
	}
}
